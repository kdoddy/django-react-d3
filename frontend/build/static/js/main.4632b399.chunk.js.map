{"version":3,"sources":["components/Modal.js","components/BarChart.js","components/ScatterPlot.js","App.js","serviceWorker.js","index.js"],"names":["CustomModal","props","handleChange","e","target","name","value","type","checked","activeItem","state","setState","this","toggle","onSave","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","title","onChange","placeholder","description","check","completed","ModalFooter","Button","color","onClick","Component","BarChart","drawBarChart","data","svgCanvas","d3","refs","canvas","append","attr","style","selectAll","enter","datapoint","iteration","dataPoint","i","text","ref","sortNumber","a","b","ScatterPlot","margin","width","height","x","scaleLinear","domain","max","d","range","y","className","transform","scale","axis","axisBottom","axisLeft","React","RenderCircles","renderCircles","map","coords","cx","cy","r","fill","key","TrendLine","x_coords","n","trendline","lr","length","sum_x","sum_y","sum_xy","sum_xx","sum_yy","slope","Math","pow","sqrt","intercept","linearRegression","lowest_x","sort","hightest_x","trendline_points","x1","y1","x2","y2","stroke","strokeWidth","Axis","node","select","call","App","refreshList","axios","get","then","res","todoList","catch","err","console","log","displayCompleted","status","viewCompleted","renderTabList","renderItems","filter","item","id","editItem","handleDelete","modal","handleSubmit","put","post","delete","createItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4632b399.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n  handleChange = e => {\n    let { name, value } = e.target;\n    if (e.target.type === \"checkbox\") {\n      value = e.target.checked;\n    }\n    const activeItem = { ...this.state.activeItem, [name]: value };\n    this.setState({ activeItem });\n  };\n  render() {\n    const { toggle, onSave } = this.props;\n    return (\n      <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Todo Item </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                value={this.state.activeItem.title}\n                onChange={this.handleChange}\n                placeholder=\"Enter Todo Title\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description</Label>\n              <Input\n                type=\"text\"\n                name=\"description\"\n                value={this.state.activeItem.description}\n                onChange={this.handleChange}\n                placeholder=\"Enter Todo description\"\n              />\n            </FormGroup>\n            <FormGroup check>\n              <Label for=\"completed\">\n                <Input\n                  type=\"checkbox\"\n                  name=\"completed\"\n                  checked={this.state.activeItem.completed}\n                  onChange={this.handleChange}\n                />\n                Completed\n              </Label>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}","import React, { Component } from 'react'\nimport * as d3 from 'd3'\nclass BarChart extends Component {\n    componentDidMount() {\n        const data = [ 2, 4, 2, 6, 8 ]\n        this.drawBarChart(data)\n    }\n    drawBarChart(data)  {\n        const canvasHeight = 400\n        const canvasWidth = 575\n        const scale = 20\n        const svgCanvas = d3.select(this.refs.canvas)\n            .append('svg')\n            .attr('width', canvasWidth)\n            .attr('height', canvasHeight)\n            .style('border', '1px solid black')\n        \n        svgCanvas.selectAll('rect')\n        .data(data).enter()\n            .append('rect')\n            .attr('width', 35)\n            .attr('height', (datapoint) => datapoint * scale)\n            .attr('fill', 'orange')\n            .attr('x', (datapoint, iteration) => iteration * 45)\n            .attr('y', (datapoint) => canvasHeight - datapoint * scale)\n\n        svgCanvas.selectAll('text')\n            .data(data).enter()\n            .append('text')\n            .attr('x', (dataPoint, i) => i * 45 + 10)\n            .attr('y', (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n            .text(dataPoint => dataPoint)\n    }\n    render() { return <div ref='canvas'></div> }\n}\nexport default BarChart","import React from \"react\"\nimport { scaleLinear, max, axisLeft, axisBottom, select } from \"d3\"\n\nfunction sortNumber(a, b) {\n  return a - b\n}\n\nexport default class ScatterPlot extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const margin = { top: 20, right: 15, bottom: 60, left: 60 }\n    const width = 800 - margin.left - margin.right\n    const height = 600 - margin.top - margin.bottom\n    const data = [[0, 3],[5, 13],[10, 22],[15, 36],[20, 48],[25, 59],[30, 77],[35, 85],[40, 95],[45, 105],[50, 120],[55, 150],[60, 147],[65, 168],[70, 176],[75, 188],[80, 199],[85, 213],[90, 222],[95, 236],[100, 249]]\n\n\n    const x = scaleLinear()\n      .domain([\n        0,\n        max(data, function(d) {\n          return d[0]\n        })\n      ])\n      .range([0, width])\n\n    const y = scaleLinear()\n      .domain([\n        0,\n        max(data, function(d) {\n          return d[1]\n        })\n      ])\n      .range([height, 0])\n\n    return (\n      <div>\n        <h3> Scatter Plot with Trend Line </h3>\n        <svg\n          width={width + margin.right + margin.left}\n          height={height + margin.top + margin.bottom}\n          className=\"chart\"\n        >\n          <g\n            transform={\"translate(\" + margin.left + \",\" + margin.top + \")\"}\n            width={width}\n            height={height}\n            className=\"main\"\n          >\n            <RenderCircles data={data} scale={{ x, y }} />\n            <TrendLine data={data} scale={{ x, y }} />\n            <Axis\n              axis=\"x\"\n              transform={\"translate(0,\" + height + \")\"}\n              scale={axisBottom().scale(x)}\n            />\n            <Axis\n              axis=\"y\"\n              transform=\"translate(0,0)\"\n              scale={axisLeft().scale(y)}\n            />\n          </g>\n        </svg>\n      </div>\n    )\n  }\n}\n\nclass RenderCircles extends React.Component {\n  render() {\n    let renderCircles = this.props.data.map((coords, i) => (\n      <circle\n        cx={this.props.scale.x(coords[0])}\n        cy={this.props.scale.y(coords[1])}\n        r=\"8\"\n        style={{ fill: \"rgba(25, 158, 199, .9)\" }}\n        key={i}\n      />\n    ))\n    return <g>{renderCircles}</g>\n  }\n}\n\nclass TrendLine extends React.Component {\n  render() {\n    let x_coords = this.props.data.map(n => {\n      return n[0]\n    })\n    let y_coords = this.props.data.map(n => {\n      return n[1]\n    })\n    const trendline = linearRegression(y_coords, x_coords)\n\n    // Lowest and highest x coordinates to draw a plot line\n    const lowest_x = x_coords.sort(sortNumber)[0]\n    const hightest_x = x_coords.sort(sortNumber)[x_coords.length - 1]\n    const trendline_points = [\n      [lowest_x, trendline(lowest_x)],\n      [hightest_x, trendline(hightest_x)]\n    ]\n\n    return (\n      <line\n        x1={this.props.scale.x(trendline_points[0][0])}\n        y1={this.props.scale.y(trendline_points[0][1])}\n        x2={this.props.scale.x(trendline_points[1][0])}\n        y2={this.props.scale.y(trendline_points[1][1])}\n        style={{ stroke: \"black\", strokeWidth: \"2\" }}\n      />\n    )\n  }\n}\n\nclass Axis extends React.Component {\n  componentDidMount() {\n    const node = this.refs[this.props.axis]\n    select(node).call(this.props.scale)\n  }\n\n  render() {\n    return (\n      <g\n        className=\"main axis date\"\n        transform={this.props.transform}\n        ref={this.props.axis}\n      />\n    )\n  }\n}\n\nfunction linearRegression(y, x) {\n  var lr = {}\n  var n = y.length\n  var sum_x = 0\n  var sum_y = 0\n  var sum_xy = 0\n  var sum_xx = 0\n  var sum_yy = 0\n\n  for (var i = 0; i < y.length; i++) {\n    sum_x += x[i]\n    sum_y += y[i]\n    sum_xy += x[i] * y[i]\n    sum_xx += x[i] * x[i]\n    sum_yy += y[i] * y[i]\n  }\n\n  lr[\"slope\"] = (n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x)\n  lr[\"intercept\"] = (sum_y - lr.slope * sum_x) / n\n  lr[\"r2\"] = Math.pow(\n    (n * sum_xy - sum_x * sum_y) /\n      Math.sqrt((n * sum_xx - sum_x * sum_x) * (n * sum_yy - sum_y * sum_y)),\n    2\n  )\n\n  return x => {\n    return lr.slope * x + lr.intercept\n  }\n}","import React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport BarChart from './components/BarChart';\nimport ScatterPlot from './components/ScatterPlot';\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n  componentDidMount() {\n    this.refreshList();\n  }\n  refreshList = () => {\n    axios\n      .get(\"http://localhost:8000/api/todos/\")\n      .then(res => this.setState({ todoList: res.data }))\n      .catch(err => console.log(err));\n  };\n  displayCompleted = status => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n    return this.setState({ viewCompleted: false });\n  };\n  renderTabList = () => {\n    return (\n      <div className=\"my-5 tab-list\">\n        <span\n          onClick={() => this.displayCompleted(true)}\n          className={this.state.viewCompleted ? \"active\" : \"\"}\n        >\n          complete\n        </span>\n        <span\n          onClick={() => this.displayCompleted(false)}\n          className={this.state.viewCompleted ? \"\" : \"active\"}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      item => item.completed === viewCompleted\n    );\n    return newItems.map(item => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-title mr-2 ${\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\n          }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            onClick={() => this.editItem(item)}\n            className=\"btn btn-secondary mr-2\"\n          >\n            {\" \"}\n            Edit{\" \"}\n          </button>\n          <button\n            onClick={() => this.handleDelete(item)}\n            className=\"btn btn-danger\"\n          >\n            Delete{\" \"}\n          </button>\n        </span>\n      </li>\n    ));\n  };\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n  handleSubmit = item => {\n    this.toggle();\n    if (item.id) {\n      axios\n        .put(`http://localhost:8000/api/todos/${item.id}/`, item)\n        .then(res => this.refreshList());\n      return;\n    }\n    axios\n      .post(\"http://localhost:8000/api/todos/\", item)\n      .then(res => this.refreshList());\n  };\n  handleDelete = item => {\n    axios\n      .delete(`http://localhost:8000/api/todos/${item.id}`)\n      .then(res => this.refreshList());\n  };\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false };\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  editItem = item => {\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  render() {\n    return (\n      <main className=\"content\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row \">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <button onClick={this.createItem} className=\"btn btn-primary\">\n                  Add task\n                </button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {this.state.modal ? (\n          <Modal\n            activeItem={this.state.activeItem}\n            toggle={this.toggle}\n            onSave={this.handleSubmit}\n          />\n        ) : null}\n        <h1 className=\"text-white text-uppercase text-center my-4\">d3 app</h1>\n        <h3 className=\"text-white text-center my-4\">Bar Chart</h3>\n        <div className=\"row \">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <BarChart />\n              </div>\n            </div>\n          </div>\n        </div>\n        <h3 className=\"text-white text-center my-4\">ScatterPlot</h3>\n        <div className=\"row \">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <ScatterPlot />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}